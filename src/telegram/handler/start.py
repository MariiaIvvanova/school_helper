from telegram import Update
from telegram.constants import ParseMode
from telegram.ext import ContextTypes

from src.db.repository.UsersRepository import UsersRepository
from src.service.UsersService import UsersService

message = """üìñ Telegram-–±–æ—Ç "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫"

üìå –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–∞—Ö. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ChatGPT, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

üîß –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
–û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç —Å –±–æ—Ç–æ–º –≤ Telegram.

/find [–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏]

–ù–∞–ø—Ä–∏–º–µ—Ä:
/find –ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ

–ë–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
```
–ù–∞–∑–≤–∞–Ω–∏–µ: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ + –≥–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
–ê–≤—Ç–æ—Ä: –§–ò–û –∞–≤—Ç–æ—Ä–∞ –∏ –∫—Ä–∞—Ç–∫–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è
–ñ–∞–Ω—Ä: –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: 2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Å—é–∂–µ—Ç–µ
–ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ 10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã: –¢–µ–º—ã –∏ –∏–¥–µ–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç –∫–Ω–∏–≥–∞
```
"""


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã —É–∂–µ email
    if context.user_data.get('awaiting_email'):
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∞–¥—Ä–µ—Å.",
            parse_mode=ParseMode.MARKDOWN
        )
        return

    users_service = UsersService(UsersRepository)
    user = users_service.check_registr(update.effective_user.id)
    
    if user:
        await update.message.reply_text(message, parse_mode=ParseMode.MARKDOWN)
    else:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await update.message.reply_text(
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π email –∞–¥—Ä–µ—Å.",
            parse_mode=ParseMode.MARKDOWN
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è email
        context.user_data['awaiting_email'] = True


#
# UsersService.check_users
# if users
#     print(start)
# else
#     print("–≤–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É")
#     UsersService.registr()
#     print(start)


